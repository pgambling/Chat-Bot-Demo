service: twitter-bot

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  profile: personal
  runtime: nodejs10.x
  environment:
    TWITTER_CONSUMER_API_KEY: ${self:custom.environment.TWITTER_CONSUMER_API_KEY}
    TWITTER_CONSUMER_API_SECRET_KEY: ${self:custom.environment.TWITTER_CONSUMER_API_SECRET_KEY}
    TWITTER_ACCESS_TOKEN: ${self:custom.environment.TWITTER_ACCESS_TOKEN}
    TWITTER_ACCESS_TOKEN_SECRET: ${self:custom.environment.TWITTER_ACCESS_TOKEN_SECRET}
    TWITTER_URL_BASE: ${self:custom.environment.TWITTER_URL_BASE}
    TWITTER_BOT_USER_ID: ${self:custom.environment.TWITTER_BOT_USER_ID}
    APP_ROOT_URL: ${self:custom.environment.API_ROOT_URL}
    ENV_NAME: ${self:custom.stage}
    LEX_BOT_ALIAS: ${self:custom.environment.LEX_BOT_ALIAS}
    LEX_BOT_NAME: ${self:custom.environment.LEX_BOT_NAME}
    IMGFLIP_USERNAME: ${self:custom.environment.IMGFLIP_USERNAME}
    IMGFLIP_PASSWORD: ${self:custom.environment.IMGFLIP_PASSWORD}
    DYNAMODB_TABLE: ${self:service}-${self:custom.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - ${self:custom.twitterMsgTopic}
    - Effect: "Allow"
      Action:
        - "lex:PostText"
      Resource:
        - ${self:custom.lexBotArn}
    - Effect: "Allow"
      Action:
        - "translate:TranslateText"
        - "comprehend:DetectDominantLanguage"
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

plugins:
  - serverless-domain-manager

custom:
  stage: dev
  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):dev}
  customDomain:
    domainName: grwi.net
    certificateArn: arn:aws:acm:us-east-1:578681038652:certificate/1694088c-d974-475c-b2b3-dfd3e4e95b6d
    basePath: ""
    stage: ${self:custom.stage}
    createRoute53Record: true
  twitterMsgTopic:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - twitterMessages
  lexBotArn:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - lex
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - bot
        - ${self:custom.environment.LEX_BOT_NAME}
        - ${self:custom.environment.LEX_BOT_ALIAS}

functions:
  twitter-crc-check:
    handler: src/twitter/crc-check.handler
    events:
      - http:
          path: twitter/webhook
          method: get
          request:
            parameters:
              querystrings:
                crc_token: true

  twitter-register-webhook:
    handler: src/twitter/register-webhook.handler
    environment:
      WEBHOOK_URL: "${self:custom.environment.APP_ROOT_URL}/twitter/webhook"

  twitter-register-subscription:
    handler: src/twitter/register-subscription.handler

  twitter-events-webhook:
    handler: src/twitter/events-webhook.handler
    environment:
      TWITTER_MSG_TOPIC: ${self:custom.twitterMsgTopic}
    events:
      - http:
          path: twitter/webhook
          method: post

  twitter-message-consumer:
    handler: src/twitter/message-consumer.handler
    events:
      - sns:
          topicName: twitterMessages
          displayName: Twitter Direct Messages

  telegram-webhook:
    handler: src/telegram/webhook.handler
    events:
      - http:
          path: telegram/webhook
          method: post

  translate:
    handler: src/lex/translate.handler

  meme-generator:
    handler: src/lex/meme-generator.handler
    environment:
      IMGFLIP_USERNAME: ${self:custom.environment.IMGFLIP_USERNAME}
      IMGFLIP_PASSWORD: ${self:custom.environment.IMGFLIP_PASSWORD}

resources:
  Resources:
    ChatUsersDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
